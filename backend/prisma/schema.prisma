// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  email      String       @unique
  password   String
  Collection Collection[]
  duels      Duel[]
  createdAt  DateTime     @default(now())
  activeDuel Duel?        @relation(name: "activeDuel")
}

model Collection {
  id          String             @id @default(uuid())
  title       String
  description String?
  question    String?
  mode        CollectionModeEnum
  owner       User               @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     String
  createdAt   DateTime           @default(now())
  images      Image[]
}

enum CollectionModeEnum {
  PERSONAL
  SECRET
  PRIVATE
  PUBLIC
}

model Image {
  id              String     @id @default(uuid())
  filepath        String
  rating          Float
  ratingDeviation Float
  volatility      Float
  numVotes        Int        @default(0)
  collection      Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  duelsAsImage1   Duel[]     @relation("image1Relation")
  duelsAsImage2   Duel[]     @relation("image2Relation")
  createdAt       DateTime   @default(now())
  collectionId    String
}

model Duel {
  id           String           @id @default(uuid())
  image1       Image            @relation("image1Relation", fields: [image1Id], references: [id], onDelete: Cascade)
  image2       Image            @relation("image2Relation", fields: [image2Id], references: [id], onDelete: Cascade)
  voter        User             @relation(fields: [voterId], references: [id], onDelete: Cascade)
  activeUser   User?            @relation(name: "activeDuel", fields: [activeUserId], references: [id], onDelete: Cascade)
  outcome      DuelOutcomeEnum?
  isFinished   Boolean          @default(false)
  image1Id     String
  image2Id     String
  voterId      String
  activeUserId String?          @unique
  createdAt    DateTime         @default(now())
}

enum DuelOutcomeEnum {
  WIN
  DRAW
  LOSS
}
